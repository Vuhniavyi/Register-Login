{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/Projects/registration-test/src/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../_actions';\n\nfunction LoginPage() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    password: ''\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const {\n    username,\n    password\n  } = inputs;\n  const loggingIn = useSelector(state => state.authentication.loggingIn);\n  const dispatch = useDispatch();\n  const location = useLocation(); // reset login status\n\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitted(true);\n\n    if (username && password) {\n      // get return url from location state or default to home page\n      const {\n        from\n      } = location.state || {\n        from: {\n          pathname: \"/\"\n        }\n      };\n      dispatch(userActions.login(username, password, from));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-8 offset-lg-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          onChange: handleChange,\n          className: 'form-control' + (submitted && !username ? ' is-invalid' : '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), submitted && !username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: \"Username is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          className: 'form-control' + (submitted && !password ? ' is-invalid' : '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), submitted && !password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: \"Password is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: [loggingIn && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 39\n          }, this), \"Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"btn btn-link\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"l94H2IB2GYrzGgl6YU7b+WmO3s8=\", false, function () {\n  return [useSelector, useDispatch, useLocation];\n});\n\n_c = LoginPage;\nexport { LoginPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Applications/Projects/registration-test/src/LoginPage/LoginPage.jsx"],"names":["React","useState","useEffect","Link","useLocation","useDispatch","useSelector","userActions","LoginPage","inputs","setInputs","username","password","submitted","setSubmitted","loggingIn","state","authentication","dispatch","location","logout","handleChange","e","name","value","target","handleSubmit","preventDefault","from","pathname","login"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { userActions } from '../_actions';\n\nfunction LoginPage() {\n    const [inputs, setInputs] = useState({\n        username: '',\n        password: ''\n    });\n    const [submitted, setSubmitted] = useState(false);\n    const { username, password } = inputs;\n    const loggingIn = useSelector(state => state.authentication.loggingIn);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    // reset login status\n    useEffect(() => { \n        dispatch(userActions.logout()); \n    }, []);\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setInputs(inputs => ({ ...inputs, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        setSubmitted(true);\n        if (username && password) {\n            // get return url from location state or default to home page\n            const { from } = location.state || { from: { pathname: \"/\" } };\n            dispatch(userActions.login(username, password, from));\n        }\n    }\n\n    return (\n        <div className=\"col-lg-8 offset-lg-2\">\n            <h2>Login</h2>\n            <form name=\"form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" value={username} onChange={handleChange} className={'form-control' + (submitted && !username ? ' is-invalid' : '')} />\n                    {submitted && !username &&\n                        <div className=\"invalid-feedback\">Username is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" value={password} onChange={handleChange} className={'form-control' + (submitted && !password ? ' is-invalid' : '')} />\n                    {submitted && !password &&\n                        <div className=\"invalid-feedback\">Password is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\">\n                        {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                        Login\n                    </button>\n                    <Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport { LoginPage };"]},"metadata":{},"sourceType":"module"}